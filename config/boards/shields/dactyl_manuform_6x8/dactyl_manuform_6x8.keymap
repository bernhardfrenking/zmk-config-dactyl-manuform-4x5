#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/* zmk-nodefree-config */
#include "../../../../zmk-nodefree-config/helper.h"
#include "../../../../zmk-nodefree-config/international_chars/german.dtsi"

/* zmk-locale-generator key header */
#include "keys_de.h" 

/* layer shortcuts */
#define DEFAULT 0
#define ALTGR 1
#define ADJ 2
#define DVC 3

/* shortcuts */
#define ___ &trans

/* behaviors */
/ {
    behaviors {
        spc_bspc: space_bspc {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_BSPC";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp BSPC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sz_question: sz_question {
            compatible = "zmk,behavior-mod-morph";
            label = "SZ_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp DE_CAPITAL_SZ>, <&kp DE_QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
				___             ___ 	        &kp ESC 			&kp F1 		    &kp F2 		    &kp F3 		    &kp F4 		    &kp F5             	    &kp F6	 	    &kp F7 		    &kp F8 		    &kp F9 		    &kp F10             &kp F11         	&kp F12
				___             ___ 		    &kp DE_CARET        &kp N1 		    &kp N2 		    &kp N3 		    &kp N4 		    &kp N5             	    &kp N6 		    &kp N7 		    &kp N8 		    &kp N9 		    &kp N0 		        &sz_question        &kp DE_ACUTE
                ___             ___		        &kp TAB             &kp Q 		    &kp W 		    &kp E 		    &kp R 		    &kp T  	         	    &kp Y 		    &kp U 		    &kp I 		    &kp O 		    &kp P 		        &kp DE_U_UMLAUT 	&kp DE_PLUS
                ___             ___ 		    &kp DE_LT  			&kp A	 	    &kp S 		    &kp D 		    &kp F 		    &kp G            	    &kp H 		    &kp J 		    &kp K  		    &kp L 		    &kp DE_O_UMLAUT     &kp DE_A_UMLAUT 	&kp DE_HASH
                ___             &kp LCTRL	    &kp LSHIFT	        &kp Z 	 	    &kp X 		    &kp C		    &kp V	 	    &kp B            	    &kp N 		    &kp M 		    &kp COMMA	    &kp DOT		    &kp DE_MINUS        &kp LSHIFT 	    	&kp ENTER
                                                                                    &kp LWIN 	    &kp LALT 	    &spc_bspc       ___      		        &mo DVC		    &mo ADJ         ___             &spc_bspc       &mo ALTGR           &kp RCTRL 
																	                &mo ADJ	        &mo DVC	        &mo ALTGR 	    ___        	 			    	 			
            >;
        };

        alt_gr_layer {                                                           
            bindings = <
				___             ___    		    ___     			___ 	 	    ___ 		    ___ 		    ___ 		    ___                     ___             ___             ___             ___             ___                 ___             ___
				___             ___    		    ___      			___ 		    ___ 		    ___ 		    ___ 		    ___             	    ___ 		    &kp DE_LBRC	    &kp DE_LBKT     &kp DE_RBKT     &kp DE_RBRC	        &kp DE_BSLH     &kp DEL 
                ___             ___ 	    	___      		    &kp DE_AT	    ___ 		    &kp DE_EURO	    ___        	    ___          		    ___ 		    &kp HOME	 	&kp UP 		    &kp END    	    ___      		    ___             &kp DE_TILDE
                ___             ___    		    &kp DE_PIPE			___ 	 	    ___ 		    ___ 		    ___ 		    ___             	    ___ 		    &kp LEFT	    &kp DOWN	 	&kp RIGHT	    ___ 		        ___      	    ___
                ___             ___    		    ___     			___ 	 	    ___ 		    ___ 		    ___	 	        ___                	    ___ 		    &kp DE_MU	    ___ 	 	 	___ 		    ___     	        ___ 	 	    ___
                                                                                    ___      	    ___     	    ___ 	        ___        		        ___		        ___             ___             &kp BSPC        ___                 ___ 
																	                ___             ___ 	        ___ 	        ___      	 	             
            >;
        };

        adjust_layer {
            bindings = <
				___             ___    		    ___     			___ 	 	    &kp DE_SQUARE   &kp DE_CUBE     ___ 		    ___                     ___             ___             ___             ___             ___                 ___             ___
				___             ___    		    ___      			___ 		    ___ 		    ___ 		    ___ 		    ___             	    ___ 		    &kp N7 		    &kp N8 		    &kp N9          ___                 ___             ___ 
                ___             ___             ___      		    ___ 		    ___ 		    ___     	    ___        	    ___          		    ___ 		    &kp N4 		    &kp N5 		    &kp N6          ___      		    ___             ___
                ___             ___    		    ___     			___ 	 	    ___ 		    ___ 		    ___ 		    ___             	    ___ 		    &kp N1 		    &kp N2 		    &kp N3          ___ 		        ___      	    ___
                ___             ___    		    ___     			___ 	 	    ___ 		    ___ 		    ___	 	        ___                	    ___ 		    &kp N0     	    &kp COMMA 	 	&kp DOT		    ___     	        ___ 	 	    ___
                                                                                    ___      	    ___     	    ___ 	        ___        		        ___		        ___             ___             ___             ___                 ___ 
																	                ___             ___ 	        ___ 	        ___      	 	            	                    
            >;
        };

        device_layer {
            bindings = <
				___    		    ___      		___ 		        ___ 		    ___ 		    ___ 		    ___             ___                     &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5        &bt BT_CLR      &out OUT_TOG
				___    		    ___      		___ 		        ___ 		    ___ 		    ___ 		    ___             ___ 		            &kp W           ___             ___             ___             ___                 ___             ___ 
                ___             ___      		___ 		        ___ 		    ___     	    ___        	    ___          	___ 		            ___             ___ 		 	___ 		    ___       	    ___      		    ___             ___
                ___             ___      		___ 		        ___ 		    ___     	    ___        	    ___          	___ 		            ___             ___ 		 	___ 		    ___       	    ___      		    ___             ___
                ___             ___      		___ 		        ___ 		    ___     	    ___        	    ___          	___ 		            ___             ___ 		 	___ 		    ___       	    ___      		    ___             ___
                                                                                    ___      	    ___     	    ___ 	        ___        		        ___		        ___             &kp W           ___             ___                 ___ 
																	                ___             ___ 	        ___ 	        ___      	 	             
            >;
        };

    };
};