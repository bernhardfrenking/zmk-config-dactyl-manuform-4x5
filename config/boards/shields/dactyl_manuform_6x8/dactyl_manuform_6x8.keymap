#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)
#include "../../../../zmk-nodefree-config/helper.h"
#include "../../../../international_chars/german.dtsi"

#define DEFAULT 0
#define RSE 1
#define LWR 2
#define ADJ 3

// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // â‚¬

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
				&kp W           &kp W 		    &kp ESC				&kp F1 		    &kp F2 		    &kp F3 		    &kp F4 		    &kp F5             	    &kp F6	 	    &kp F7 		    &kp F8 		    &kp F9 		    &kp F10         &kp F11     &kp F12
				&kp W           &kp W 		    &kp TAB 			&kp N1 		    &kp N2 		    &kp N3 		    &kp N4 		    &kp N5             	    &kp N6 		    &kp N7 		    &kp N8 		    &kp N9 		    &kp N0 		    &kp QMARK   &kp GRAVE
                &kp W           &kp W 		    &kp LOCKING_CAPS	&kp Q 		    &kp W 		    &kp E 		    &kp R 		    &kp T  	         	    &kp Z 		    &kp U 		    &kp I 		    &kp O 		    &kp P 		    &de_ue      &kp KP_ASTERISK
                &kp W           &kp W 		    &kp LSHIFT			&kp A	 	    &kp S 		    &kp D 		    &kp F 		    &kp G            	    &kp H 		    &kp J 		    &kp K  		    &kp L 		    &de_oe          &de_ae      &kp HASH
                &kp W           &kp W 		    &kp LCTRL			&kp Y 	 	    &kp X 		    &kp C		    &kp V	 	    &kp B            	    &kp N 		    &kp M 		    &kp COMMA	    &kp DOT		    &kp W	 	    &kp LSHIFT 	&kp ENTER
                                                                                    &kp LWIN 	    &kp LALT 	    &kp SPACE 	    &kp W          		    &mo ADJ		    &mo LWR         &mo RSE         &kp SPACE       &kp RALT        &kp RCTRL 
																	                &mo LWR	        &mo ADJ	        &mo RSE 	    &kp W        	 			    	 			
            >;
        };

        raise_layer {
            bindings = <
				&kp W           &bt BT_CLR      &out OUT_TOG        &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5            &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5    &bt BT_CLR  &out OUT_TOG
				&kp W           &kp W 		    &kp TAB 			&kp N1 		    &kp DQT		    &kp N3 		    &kp N4 		    &kp N5             	    &kp N6 		    &kp N7 		    &kp N8 		    &kp N9 		    &kp N0 		    &kp QMARK   &kp W
                &kp W           &kp W 		    &kp LOCKING_CAPS	&kp Q 		    &kp W 		    &kp E 		    &kp R 		    &kp T  	         	    &kp Z 		    &kp U 		    &kp I 		    &kp O 		    &kp P 		    &kp W 		&kp PLUS
                &kp W           &kp W 		    &kp LSHIFT			&kp A	 	    &kp S 		    &kp D 		    &kp F 		    &kp G            	    &kp H 		    &kp J 		    &kp K  		    &kp L 		    &kp O 		    &kp W	 	&kp SINGLE_QUOTE
                &kp W           &kp W 		    &kp LCTRL			&kp Y 	 	    &kp X 		    &kp C		    &kp V	 	    &kp B            	    &kp N 		    &kp M 		    &kp COMMA	    &kp DOT		    &kp W	 	    &kp W	 	&kp W
                                                                                    &kp LWIN 	    &kp LALT 	    &kp SPACE 	    &kp W          		    &mo ADJ		    &mo LWR         &mo RSE         &kp SPACE       &kp RALT        &kp RCTRL 
																	                &mo LWR	        &mo ADJ	        &mo RSE 	    &kp W        	 	             
            >;
        };

        lower_layer {
            bindings = <
				&kp W           &bt BT_CLR      &out OUT_TOG        &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5            &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5    &bt BT_CLR  &out OUT_TOG
				&kp W           &kp W 		    &kp TAB 			&kp N1 		    &kp N2 		    &kp N3 		    &kp N4 		    &kp N5             	    &kp N6 		    &kp N7 		    &kp N8 		    &kp N9 		    &kp N0 		    &kp QMARK   &kp W
                &kp W           &kp W 		    &kp LOCKING_CAPS	&kp Q 		    &kp W 		    &euro_sign	    &kp R 		    &kp T  	         	    &kp Z 		    &kp U 		    &kp I 		    &kp O 		    &kp P 		    &kp W 		&kp W
                &kp W           &kp W 		    &kp LSHIFT			&kp A	 	    &kp S 		    &kp D 		    &kp F 		    &kp G            	    &kp H 		    &kp J 		    &kp K  		    &kp L 		    &kp O 		    &kp W	 	&kp W
                &kp W           &kp W 		    &kp LCTRL			&kp Y 	 	    &kp X 		    &kp C		    &kp V	 	    &kp B            	    &kp N 		    &kp M 		    &kp COMMA	    &kp DOT		    &kp W	 	    &kp W	 	&kp W
                                                                                    &kp LWIN 	    &kp LALT 	    &kp SPACE 	    &kp W          		    &mo ADJ		    &mo LWR         &mo RSE         &kp SPACE       &kp RALT        &kp RCTRL 
																	                &mo LWR	        &mo ADJ	        &mo RSE 	    &kp W        	 	
            >;
        };

        adjust_layer {
            bindings = <
				&kp W           &bt BT_CLR      &out OUT_TOG        &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5            &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5    &bt BT_CLR  &out OUT_TOG
				&kp W           &kp W 		    &kp TAB 			&kp N1 		    &kp N2 		    &kp N3 		    &kp N4 		    &kp N5             	    &kp N6 		    &kp N7 		    &kp N8 		    &kp N9 		    &kp N0 		    &kp QMARK   &kp W
                &kp W           &kp W 		    &kp LOCKING_CAPS	&kp Q 		    &kp W 		    &kp E 		    &kp R 		    &kp T  	         	    &kp Z 		    &kp U 		    &kp I 		    &kp O 		    &kp P 		    &kp W 		&kp W
                &kp W           &kp W 		    &kp LSHIFT			&kp A	 	    &kp S 		    &kp D 		    &kp F 		    &kp G            	    &kp H 		    &kp J 		    &kp K  		    &kp L 		    &kp O 		    &kp W	 	&kp W
                &kp W           &kp W 		    &kp LCTRL			&kp Y 	 	    &kp X 		    &kp C		    &kp V	 	    &kp B            	    &kp N 		    &kp M 		    &kp COMMA	    &kp DOT		    &kp W	 	    &kp W	 	&kp W
                                                                                    &kp LWIN 	    &kp LALT 	    &kp SPACE 	    &kp W          		    &mo ADJ		    &mo LWR         &mo RSE         &kp SPACE       &kp RALT        &kp RCTRL 
																	                &mo LWR	        &mo ADJ	        &mo RSE 	    &kp W        	 	                    
            >;
        };
    };
};